package com.ailk.sets;import java.io.IOException;import javax.servlet.Filter;import javax.servlet.FilterChain;import javax.servlet.FilterConfig;import javax.servlet.ServletException;import javax.servlet.ServletRequest;import javax.servlet.ServletResponse;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;public class RedirectFilter implements Filter {	private FilterConfig config;	private String excludedPages;	private String[] excludedPageArray;	@Override	public void init(FilterConfig filterConfig) throws ServletException {		this.config = filterConfig;		excludedPages = filterConfig.getInitParameter("excludedPages");		if (excludedPages != null) {			excludedPageArray = excludedPages.split(",");		}	}	public void destroy() {		this.config = null;	}	//执行过滤的核心方法	@Override	public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException,			ServletException {		boolean isExcludedPage = false;		for (String page : excludedPageArray) {			if (((HttpServletRequest) request).getServletPath().contains(page)) {				isExcludedPage = true;				break;			}		}		if (isExcludedPage) {			chain.doFilter(request, response);			return;		}		String redirect = config.getInitParameter("redirect");		String localUrl = config.getInitParameter("localUrl");		if ("1".equals(redirect) && localUrl != null && !"".equals(localUrl)) {			request.getRequestDispatcher(localUrl).forward(request, response);		} else {			HttpServletRequest req = (HttpServletRequest) request;			HttpServletResponse resp = (HttpServletResponse) response;			String q = req.getQueryString();			System.out.println(req.getRequestURI());			String url = "http://182.92.1.225" + req.getRequestURI() + (q == null ? "" : ("?" + q));			resp.sendRedirect(url);		}	}}